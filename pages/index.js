import Head from "next/head";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import { Table } from "antd";
import { useState, useEffect } from "react";
import axios from "axios";
import { message } from "antd";

export default function Home() {
  const [data, setData] = useState([]);
  const [totalPages, setTotalPages] = useState();
  const [loading, setLoading] = useState(false);
  var Users = [];

  const addFav = (record) => {
    Users.push(record);
    localStorage.setItem("Users", JSON.stringify(Users));
    message.success("Added to favourites.");
  };

  useEffect(() => {
    fetchData(1);
  }, []);

  const columns = [
    {
      title: "Name",
      dataIndex: "name",
      key: "name",
      width: 400,
      render: (text, record, index) => {
        const x = record.url;
        const y = x.split("/");
        const ID = y[5];
        return (
          <Link href={`/${ID}`}>
            <a>{text}</a>
          </Link>
        );
      },
    },
    {
      title: "DOB",
      dataIndex: "birth_year",
      key: "birth_year",
      width: 300,
    },
    {
      title: "Gender",
      dataIndex: "gender",
      key: "gender",
      width: 300,
    },
    {
      title: "Action",
      key: "action",
      render: (text, record) => (
        <span>
          <a onClick={() => addFav(record)}>Add Favourite</a>
        </span>
      ),
    },
  ];

  const fetchData = (page) => {
    setLoading(true);
    axios.get(`https://swapi.dev/api/people/?page=${page}`).then((res) => {
      setData(res.data.results);
      setTotalPages(res.data.count);
      setLoading(false);
    });
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div>
          <Table
            rowKey={(record) => record.name}
            loading={loading}
            columns={columns}
            dataSource={data}
            pagination={{
              pageSize: 10,
              total: totalPages,
              onChange: (page) => {
                fetchData(page);
              },
            }}
          ></Table>
        </div>
      </main>
    </div>
  );
}
